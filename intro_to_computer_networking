Course Intro:
    - Protocol:
        -- a defined set of standards that computers must follow in order to communicate properly.
    - Computer networking:
        -- the name we've given to the full scope of how computers communicate with each other.
    - TCP/IP 5 layer communication model:

             ===================================================================================================
             | #   |  Layer Name       |     Protocol          |         Protocol Data  |     Addressing       |
             |     |                   |                       |           Unit         |                      | 
             |-----|-------------------|-----------------------|------------------------|----------------------|
             | 5   | Application       |   HTTP, SMTP, etc..   |         Messages       |         n/a          |Web browser
             |-----|-------------------|-----------------------|------------------------|----------------------|
             | 4   |  Transport        |   TCP/UDP             |         Segment        |       Port #'s       |Client/Server
             |-----|-------------------|-----------------------|------------------------|----------------------|
             | 3   |   Network         |        IP             |         Datagram       |      IP address      |Router
             |-----|-------------------|-----------------------|------------------------|----------------------|
             | 2   |  Data Link        |  Ethernet, Wi-Fi      |          Frames        |      MAC Address     |Switch
             |-----|-------------------|-----------------------|------------------------|----------------------|
             | 1   |  Physical         |  10 Base T, 802.11    |          Bits          |        n/a           |Ethernet Cable
             ===================================================================================================    


    - Layers:
        -- Physical layer:
            -- Represents the physical devices that interconnect computers:
                -- specifications for the networking cables
                -- connectors that connect devices
                -- specifications on how signal are sent over this cables
        -- Data Link layer ( network interface or the network access layer):
                -- introduce protocols
                -- defines the way signals are interpreted using protocols so computers understand
                -- protocol example protocol is the Ethernet
                    -- defines the protocol standards responsible for getting data to nodes on the same network or link.
        -- Network Layer (internet layer):
                -- Allows different networks to communicate with each other through devices known as routers.
                -- Note: A collection of networks connected together through routers are known as Internetwork, the most 
                    famous of these being the Internet.
                -- responsible for getting data delivered across a collection of networks.
                -- Most common protocol here is the IP.
        -- Transport Layer:
                -- Sorts out which client and server programs are supposed to get that data from the network layer
                -- TCP/UDP; (User Datagram Protocol)
        -- Application Layer:
                -- This receives and send the data.


    -- NOTE:
        In addition to the five layer model we are working with, it\u2019s important to note that other models exist. The traditional TCP/IP Model only has four layers, as it doesn\u2019t differentiate between the physical layer and the data link layer, but is otherwise very similar to the one we\u2019ll be working with. The most well known other model is the OSI model. It\u2019s the model taught by many other networking certificate programs, like Net+ and Cisco\u2019s many networking certifications. The primary difference between our five layer model and the seven layer OSI model is that the OSI model abstracts the application layer into three layers total.
    Help link: https://en.wikipedia.org/wiki/OSI_model#Comparison_with_TCP/IP_model

The Basics of Networking Devices:
    - Cables:
        -- Connect different devices to each other, allowing data to be transmitted over them.
        -- Types: Copper and fiber
            -- Copper Cable:
                - types include: Cat5, Cat5e, and Cat6 cabbles
        -- Crosstalk:
            -- this is when an electrical pulse on one wire is accidentally detected on another wire.
            -- Fiber cables:
                -- Contain individual optical fibers, which are tiny tubes made out of glass about the width of human hair.
    - Hubs and Switches:
        The primary devices used to connect computers on a single network, usually referred to as a LAN, 
        or local area network.
        -- Hubs:
            - Belongs to Physical Layer
            - A physical layer device that allows for connections from many computers at once
            - produces much noice creating Collison Domain
                - Collision Domain:
                    - A network segment where only one device can communicate at a time. 
        -- Switch or Network Switch:
            - Belongs to the Data Link layer
            - An improvement on hubs
            - inspects ethernet data to determine where each packet should go
            
    - Routers:
        -- A device that knows how to forward data between independent networks
        -- Belongs to Layer 3
        -- inspects IP addresses and determine where each packet should go.
        -- Use routing table to determine where things are sent.
        - Core Router:
            -- used by ISPs to connect networks over a huge area.
            -- Use the Border Gateway Protocol (BGP) to share data with each other, which lets them learn about the 
                most optimal paths to forward traffic.

    - Servers and Clients:

The Physical Layer:
    - Consists of devices and means of transmitting bits across computer networks
    - Line Coding === Modulation === Varying electrical signals passing through a coper cable during signal transmission
    - Twisted Pair Cabling and Duplex
        - helps prevent cross-talk and electromagnetic interference
        - Composition:
            -- Cat6 wire == 8 wires in twisted 4 pairs in on jacket
        - enablee duplex communication: which makes it possible to have data flow in both directions
    - NOTE: 
        -> Simple communication is unidirectional
        -> A full two way communication is called Full-duplex
        -> Half-duplex: here only one device can communicate at a time
    - Ethernet over twisted pair technologies are the communications protocols that determine how much data can be sent over a twisted pair cable, how quickly that data can be sent, and how long a network cable can be before the data quality begins to degrade.
            help link: https://en.wikipedia.org/wiki/Ethernet_over_twisted_pair

    - Network ports and patch panel:
        -- Most common plug used to expose network wires is: RJ45 (Registered Jack 45) which has a corresponding port on the device
        -- Diagram of a RJ45 port:

                            --------------------------------------
                            ||------|  ----------------  |------||
         Link LED           ||      |  |              |  |      ||   Activity LED
                            ||------||--              --||------||
                            |        |                  |        |
                            ||--------                  --------||
                            ||                                  ||
                            ||                                  ||
                            ||                                  ||
                            ||                                  ||
                            ||                                  ||
                            ||    __   __   __   __   __   __   ||
                            ||   |  | |  | |  | |  | |  | |  |  ||
                            --------------------------------------

    - Device connection setup:
        -- Device ==> Network Ports ==> Patch Panels ===> routers / switches (provides network access to the devices at the other end)

The Data Link Layer:
    - The ethernet protocol is used to send data across individual links
    - CSMA/CD: Carrier Sense Multiple Access with Collision Detection, is used by ethernet to detect collision and prevent it. Used to determine when communication channels are clear, and when a device is free to transmit data.
    - Media Access Controll Address or MAC Address:
        -- it's a 48-bit number normally represented by six groupings of two hexadecimal numbers.
            -- Hexadecimal ( or Base 16) numbers are: 0 1 2 3 4 5 6 7 8 9 A B C D E F, 
            -- an example would be 12:ED:34:78:FA:AD
    - Another way to represent MAC addresses is using Octet which are any number that can be represented by 8 bits.
    - MAC Address composition:
        -- The first three octets of a MAC address is known as the Organizationally Unique Identifier (OUI), used to identify the organization that owns the MAC device
        -- 

Assigned to manufacturer by     ======================== ============================
IEEE: Institute of Electronics  | Organizational Unique| | Vendor Assigned          | <++++++ Assigned by manufacturer
Electrical Engineers   ++++++>> | Identifier           | | (NIC Cards, Interfaces   |
                                |                      | |                          |
                                ======================== ============================
   
            Size, in bits       | <===   24 bits    ==> | <==      24 bits      ==> |
            Size in hex digits  | <==  6 Hex Digits ==> | <==    6 Hex Digits   ==> |
            Example             | <==    00 60 2F   ==> | <==     3A 07 BC      ==> |
            Structure           | <==    Cisco      ==> | <== Particular Device ==> |

    - NOTE: Ethernet uses MAC addresses to ensure that data it sends has both an address for the machine that sent the transmission, 
            as well as the one the transmission was intended for.

    - Unicast, Multicast, and Broadcast:
        -- Unicast:
            -- Transmission of data from one device to just another one device
            -- Transmission is always meant for just one receiving address
            -- Determined by the rule that says:
                ::if the least significant bit in the first octet of a destination address is set to zero, 
                    it means that ethernet frame is intended foronly the destination address.
        -- Multicast:
            -- Determined by the rule that says:
                :: if the least significant bit in the first octet os a destination address is set to one, 
                    it means you're dealing with a multicast frame
        -- Broadcast:
            -- Determined using a special address:
                :: The address is FF:FF:FF:FF:FF:FF

    - Dissectin An Ethernet Frame:
        -- Data packet:
            -- An all-encompassing term that represents any single set of binary data being sent across a network link
            -- Data packets at the Ethernet level are known as Ethernet Frames.
            -- Ethernet frames: A highly structured collection of information presented in a specific order.

            -- Ethernet Frames structure:
               
                Preamble                        Source Address    Ether-type                            FCS
                  8 bytes                          6 bytes         2 bytes                            4 bytes
                     |                               |                |                                  |
                -----------------------------------------------------------------------------------------------
                |                |            |            |        |    |                           |        |  
                -----------------------------------------------------------------------------------------------
                                        |                      |                         |
                                Destination Address           Tag                     Payload
                                      6 bytes               4 bytes                 0-1,500 bytes

            -- Preamble: 8 bytes)=(or 64bits) long, and can be split into two sections:
                -- Sections:    
                    -- 7 bytes:> alternating ones and zeros which act partially as buffers between frames and are used as internal clocks to regulate speed
                                at which data is sent.
                    -- 1 byte:> SFD ==: Start Frame Delimiter. It signals to a receiving device that the preamble is over and that the actual frame contents will soon follow.
            -- Destination and Source Address: destination and source of data. 
            -- EtherType field:
                -- 16 bits long and used to describe the protocol of the contents of the frame
            -- Tag or VALN Tag:
                -- Indicates that the frame itself is what's called a VLAN frame.
                    --- VLAN: A technique that lets you have multiple logical LANs operating on the same physical equipment.
            -- Payload:
                -- Is the actual data being transported, which is everything that isn't a header. Length 46 - 1500 bytes long and contains layers 3 - 5 in the TCP/IP layer module.
            -- FCS: Frame Check Sequence
                - A 4 byte ( or 32 bit) number that represents a checksum value for the entire frame
                - This checksum value is calculated by performing what's known as a cyclical redundancy check against the frame.
                - CRC (Cyclical Redundancy Check) is an important concept used for data integrity, and is used all over computing, not just network transmissions. 

The Network Layer:
    - IP Datagram and Encapsulation:
        -- Here packets are known as IP datagram
        -- IP Datagram: This is a highly structured series of fields that are strictly defined.

    
            0        4                8                               16                                        19                                                             31
            |        |                |                                |                                        |                                                               |
            ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
            |Version |  Header Length |         Service Type           |                                 Total  Length                                                          |
            |        |                |                                |                                                                                                        |
            |________|________________|________________________________|________________________________________________________________________________________________________|
            _____________________________________________________________________________________________________________________________________________________________________
            |                                                          |                                        |                                                               |
            |                  Identification                          |           Flags                        |                            Fragment Offset                    |
            |__________________________________________________________|________________________________________|_______________________________________________________________|
            _____________________________________________________________________________________________________________________________________________________________________
            |                         |                                |                                                                                                        |
            |         TTL             |        Protocol                |                                Header Checksum                                                         |
            |_________________________|________________________________|________________________________________________________________________________________________________|
            _____________________________________________________________________________________________________________________________________________________________________
            |                                                                                                                                                                   |
            |                                                                    Source IP Address                                                                              |
            |___________________________________________________________________________________________________________________________________________________________________|
            ____________________________________________________________________________________________________________________________________________________________________
            |                                                                                                                                                                   |
            |                                                                 Destination IP Address                                                                            |
            |___________________________________________________________________________________________________________________________________________________________________|
            _____________________________________________________________________________________________________________________________________________________________________
            |                                                                                                            |                                                      |
            |                        Options                                                                             |                        Padding                       |
            |____________________________________________________________________________________________________________|______________________________________________________|

        NOTE: THIS SECTIO IS THE PAYLOAD SECTION IN THE ETHERNET FRAME


        -- Sections of the IP Datagram:
            -- Version: indicates the version of the ip protocol being e.g. IPv4
            -- Header: 4 bit, declares how long the field is. 20 bytes in length when dealing with IPv4
            -- Service Type: 8 bits, used to specify details about quality of service, or QoS, technologies
            -- Total Length Field: 16 bits, indicates the total length of the IP datagram it's attached to.
            -- Identification field: 16-bit number that's used to group messages together
                    Note:-- The maximum size of a single datagram is the largest number you can represent with
                            16 bits: 65,535. If the total amount of data that needs to be sent is larger than what can fit in a
                            single datagram, the IP layer needs to split this data up into many individual packets.
                -- Used to identify packets from the same transmission as each will have value in this field

            -- Flags:
                -- Similar to the fragment Offset field, used ot indicate is a datagram is allowed to be fragmented, or to indicate that 
                    the datgram has already been fragmented. 
                -- NOTE: Fragmentation: Is the process of taking a single IP datagram and splitting it up into several smaller datagram.
            -- Fragment Offset:
                -- used by the receving end to put back fragmented datagram together.
            -- TTL:
                -- Time to Live(TTL): an 8-bit field that indicates how many router hops a datagram can transverse before it's
                    thrown away. Here routers will decrement this field value till it reaches zero then further transmissions of the datagram is stopped.
            -- Protocol:
                -- 8-bit field that contains data about what transport layer protocol is being used such as TCP or UDP
            -- Header Checksum:
                -- An checksum of the contents of the entire IP datagram header
            -- Source IP Address:
                -- 32 bits long
            -- Destination IP Address:
                -- 32 bits long
            -- Options:
                -- An optional field and is used to set special characteristics for datagram primarily used
                    for testing purposes.
            -- Padding:
                -- A series of zeros used to ensure the header is the correct total size.
        
        - Relationship between the different TCP/IP Communication Model:
                

                                                                                       __________________
                                                                                       |                |
                                                                                       |     Message    |   
                                                                                       |                |             Application
                                                                                       |________________| _______________________

                                                                                       |                |             
                                                                                       ------------------    
                                                                                                |
                                                                                                v
                                                                        _________________________________
                                                                        |TCP or        |                | 
                                                                        | UDP          |   Message      |
                                                                        | Header       |                |               Transport
                                                                        |______________|________________|________________________

                                                                                       |                |
                                                                                       ------------------
                                                                                               |
                                                                                               V
                                                             ____________________________________________
                                                             | IP       |                               |
                                                             | header   |  TCP segment or UDP datagram  |
                                                             |          |                               |                  Network
                                                             |__________|_______________________________|_________________________
                                                 
                                                                        |                               |
                                                                        --------------------------------- 
                                                                                               |
                                                                                               V
                                                 ____________________________________________________________________
                                                 | Ethernet  |                                          | Ethernet  |
                                                 | header    |            IP datagram                   |  footer   |
                                                 |           |                                          |           |        Data-link
                                                 |___________|__________________________________________|___________|  _______________


    - IP Address Classes:
        -- Are split into two sections: network ID and host ID
        -- Chracteristics of an IP address:: 

                    |------------------> network ID
                   |-|
                    9.100.100.100
                      |----------|
                           |----------------> host ID
        -- Address class system:
            -- A way of defining how the global IP address space is split up.
        -- Types of address:
            -- Class A: 1st Octet == network ID, last three for host ID
            -- Class B: first two octet == network ID, and last two for host ID
            -- Class C: first three == network ID and last one for host ID
            --
                                    IP address classes

            -------------------------------------------------------------------------------------
            | Class          |               Range              |          Max Hosts            |
            -------------------------------------------------------------------------------------
                   A                         0-126                       16 Million                24 bits of host id space
            
                   B                        128-191                      64,000                  
                                     
                   C                        192-223                       256                       8 bits of host id space

                   D                        224-239                       N/A
 
                   E                        240-255                       N/A

           -----------------------------------------------------------------------------------
            Class	        1st Octet Decimal Range	            1st Octet High Order Bits
           -----------------------------------------------------------------------------------
            A	                1 - 126*	                    0
            B	                128 - 191	                    10
            C	                192 -  223	                    110
            D	                224 -  239	                    1110


        -- Indentifying IP Class IP addresses based on the value of the first octet:
            -- 0 > class  A
            -- 10 > class B
            -- 110 > class C
            -- 1110 > class D Used for Multicasting
            -- 11110 > class E Used for testing and has been replaced with CIDR (Claassless inter-domain routing)


    - Address Resolution Protocol:
        --  The relationship between ip addresses and MAC address can be shown via ARP (Address Resolution Protocol)
        --  ARP: A protocol ued to discover tje hardware address of a node with a certain IP address
        -- ARP Table:
            -  A list of IP addresses and MAC addresses associated with them.
            - all connected devices to the networl have a local ARP table to help it access or get the MAC address of any node device
                that the packet is intended for

        -- Unknown computer transmission steps:
            

                Source [ MAC Address of computer unknown ] Sends an Braodcast ARP Message with MAC address of FF:FF:FF:FF:FF:FF ====> All systems receive this broadcast ===> Target Computer
                / \                                          to the IP Address.                                                                                                |
                 |                                                                                                                                                             |
                 |  <=== MAC Address of target machine received by source machine                                                                               Responds with a ARP Response
                 |                                                                                                                                                             |
                 |                                                                                                                                                             |
                 ---------------------------------------------------------------------------------------------------------------------------------------------------------------

        -- NOTE: ARP table entries generally expire after a short amount of time to ensure changes in the network are accounted for.


    - Subnetting:
        -- THe process of taking a large network and splitting it up into many individual and smaller subnetworks, or subnets.
        -- 
    - Subnet Masks
        -- Core Routers only care about the network ID
        -- Gateway Routers use the host ID to send the received packets to the right machine
        -- Subnet Masks are used to identify machines on a subnet
            -- Subnet masks: are 32-bit numbers that are normally written out as four octets in decimal
            -- A subnet mask defines which chunk of an IP address is the host ID and which portion is the subnet network ID. 
               This trick is accomplished using a subnet mask, another 32-bit number. A subnet mask works like a filter with 
               the mask identifying the IP address bits that represent the network ID with a 1, and the bits that represent the host ID with a 0. 
               The more host bits you have, the more devices that can connect to your subnet at the expense of the total number of sub networks you can set up, and visa-versa.
            --  Subnet Masking example using a 20-bit subnet mask

                                        144  .    28  .    16  .   17
                        IP address:  10010000 00011100 00010000 00010001
                        Subnet mask: 11111111 11111111 11110000 00000000
                        Network ID:  10010000 00011100 00010000 00000000
                                        144  .    28  .    16  .    0

            -- NOTE: The function of a subnet mask is to extract the network ID portion of an IP destination address and determine 
               whether an IP address exists on the local network or whether it must be routed outside the local network. 
               If the extracted network ID matches the local network ID, the destination is located on the local network. 
               However, if they don\u2019t match, the message must be routed outside the local network. The process used to apply 
               the subnet mask involves Boolean algebra to filter out nonmatching bits. 

        -- The purpose of the Subnet mask is to tell the router what part of the IP Address is the Subnet ID.
            -- The numbers in the remaining octet that have a corresponding '1' is the subnet ID, and the ones with corresponding '0' is the host ID.

        -- Subnet Mask example:
            -- 

                    255    .    255   .    255   .   224
                  11111111   11111111   1111111     11100000 >> Has only 5 bits of host id space OR 32 addresses

                    Hence the IP address 9.100.100.100 can translated into 9.100.100.100/27 with the above subnet mask

        -- Number Ranges:
            8  bit 2^8 = 256 0-255
            4  bit 2^4 = 16  0-16
            16 bit 2^16 = 65536

        -- CIDR:
        -- Classless inter-domain Routing:
            -- Example address using CIDR:> 3.33.123.1/24

   - Routing:
        -- Basic Routing Concepts:


                            Exaines destination IP(2)
                                     / \ 
                                      |                  
            (1) Receive data packet ----->> Router ------>> Forwars traffic to destination (4)
                                                      |
                                                      V
                                       Looks up IP destination network in routing table
        -- NOTE: IP addresses belong to networks not individual nodes on the network

    - Routing Tables:
        -- Components:
            -- 4 Columns
            -- Destination Network:
                    -- e.g.
                            IP:192.168.1.1
                            Subnet Mask: 255.255.255.0
                            CIDR: 192.168.1.1/24
            -- Next Hop: The next IP address of the next router that should receive data for next destination network, or 
                        could just state that no further hops are need and that current network is the destination network
            -- Total Hops: Total number of routers between the current route and the packet destination
            -- Interface: Needs to know which of its interface it should forward traffic to to get to the data destination.

    -- Interior Gateway Protocols:
            -- Routers use routing protocols to speak to each other
            -- Routing protocols fall into two categories: interior gateway protocol an dexterior gateway protocol
            -- Interior Gateway Protocol:
                -- This is divided into two:
                    -- Link state routing protocol and distance-vector protocols
                -- This is used by routers to share information within a single autonomous system
                -- Autonomous System:
                    -- A collection of networks that all fall under the control of a single network operator.
                -- Distance-vector protocols:
                    -- here the router uses the information of how far each network (in terms of hops) is and share this with all the routers on the network.
                    -- list in computer science are called vectors.
                -- Link state routing protocol:
                    -- here each router advertises the state of each of it's interface to every router on the autonomous system

    -- Exterior Gateway Protocols:
            -- this is used to share information between routers at the edge of autonomous systems
            -- used to share information beteween organisations
            -- Interior Assigned Numbers Authority (IANA):
                -- A non-profit organisation that helps manage things like IP address allocation
                -- also responsible for ASN, or Autonomous System Number allocation.
                -- ASN: this are numbers assigned to individual autonomous systems, represented as sigle decimal number of 32 bit size.
    -- NOTE:        
        -- W've covered a few different routing protocol types, but we haven\u2019t discussed the details of how the actual implementation of these protocols might matter.The most common distance vector protocols are RIP, or Routing Information Protocol, and EIGRP, or Enhanced Interior Gateway Routing Protocol. The most common link state protocol is OSPF, or Open Shortest Path First.
        -- In terms of exterior gateway protocols, there is only one in use today. The entire Internet needs to agree on how to exchange this sort of information, so a single standard has emerged. This standard is known as BGP, or Border Gateway Protocol.

    -- Wiki information:
        -- BGP may be used for routing within an autonomous system. In this application it is referred to as Interior Border Gateway Protocol, Internal BGP, or iBGP. In contrast, the Internet application of the protocol may be referred to as Exterior Border Gateway Protocol, External BGP, or eBGP. Link: https://en.wikipedia.org/wiki/Border_Gateway_Protocol

    -- Non-Routable Address Space:
        -- RFCs (Request for Comments): started in 1996
        -- these are a range of IP addresses that are set aside for those that cannot be reached by routing
        -- computers connected via this protocol will communicate with other computers on the same network but no gateway router will try to send internet traffic to this devices.
        -- Range of IP addresses that are for all to use and non-assignable are:
            --- 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16
            --- Note: that interior gateway routers will route these spaces.

Transport Layer:
    -- Responsible for:
        -- multiplesxing and demultiplexing
        -- establishing long running connections
        -- ensuring data integrity via error checking and data verification.
    -- the ability to multiplex and demultiplex sets the teansport layer apart from all other layers.


               ________     ________    ________   ________
               |      |     |      |    |      |   |      |
               |      |     |   Processes      |   |      |
               |______|     |______|    |______|   |______|
 
                 |              |           |          |
                 |              |           |          | 
                 v              v           v          v

               _____________________________________________
               \                                           /
                \                Multiplexer              /
                 \_______________________________________/

                                       |
                                       |
                                       v
                  _______________________________________
                  |                                     |
                  |               IP                    |
                  |_____________________________________|


             -----------------------------------------------------------
               ________     ________    ________   ________
               |      |     |      |    |      |   |      |
               |      |     |   Processes      |   |      |
               |______|     |______|    |______|   |______|

                / \            / \         / \        / \ 
                 |              |           |          |
                 |              |           |          | 

                     ________________________________
                    /                                \
                   /           Demultiplxer           \
                  /____________________________________\
                                   / \
                                    |
                                    |        
                  _______________________________________
                  |                                     |
                  |               IP                    |
                  |_____________________________________|


        -- the transport layler handles both multiplexing and demultiplexing via ports.
        -- Port: A 16-bit number that's used to direct traffic to specific services running on a networked computer.
        -- 10.0.0.100:80 is called  Socket Address or Socket number

    -- Dissection of a TCP Segment:
        -- Ethernet Frame [ IP datagram ] ==> Ethernet payload
        -- IP Segment [ TCP Segment ] ==> IP Segment payload
        -- TCP Segment is composed of:
            -- TCP Header
            -- Data Section
            -- TCP Header

                             Bit 0                                               Bit 15  Bit 16                                          Bit 31
                             __________________________________________________________  _____________________________________________________
                             |                                                         | |                                                    |
                             |                    Source Port (16)                     | |                 Destination port (16)              |
                             |_________________________________________________________| |____________________________________________________|
                             __________________________________________________________________________________________________________________
                             |                                                                                                                |
                             |                                                  Sequence Number (32)                                          |
                             |________________________________________________________________________________________________________________|
                             __________________________________________________________________________________________________________________
                             |                                                                                                                |
                             |                                                Acknowledgement Number (32)                                     |
                             |________________________________________________________________________________________________________________|
                             __________________ ___________________ _____________________ _____________________________________________________
                             |                | |                 | |                   | |                                                   |
                             |Header length(6)| |Empty (6)        | | Control flags (6) | |                     Window (16)                   |
                             |________________| |_________________| |___________________| |___________________________________________________|                     
                             ___________________________________________________________ ______________________________________________________
                             |                                                         | |                                                    |
                             |                 Checksum (16)                           | |                 Urgent (16)                        |
                             |_________________________________________________________| |____________________________________________________|
                             ___________________________________________________________ ______________________________________________________
                             |                                                         | |                                                    |
                             |                  Options (0 or 16 if any)               | |                      Padding                       |
                             |_________________________________________________________| |____________________________________________________|
                             __________________________________________________________________________________________________________________
                             |                                                                                                                |
                             |                                                  Data payload (varies)                                         |
                             |________________________________________________________________________________________________________________|

                
                    
        -- Destination port:    
            -- this is the port the traffic is intended for
        -- Source port:
            -- A high-nunbered port chosen from a special section of portd known as ephemeral ports.
        -- Sequence number:
            -- A 32-bit number that's used to keep track of where in a sequence of TCP segments this one is expected to be.
        -- Acknowledgement number:
            -- The number of the next expected segment.
        -- Data offset field:
            -- A 4-bit number that communicates how long the TCP header for this segment is.
        -- Control flags:
            -- reserved for the TCP control flags
            -- 
        -- TCP Window:
            -- Specifies the range of sequence numbers that might be sent before an acknowledgment is reguired.
            -- 
        -- TCP checksum:
            -- Operates just like the checksum fields at the IP and ethernet level.
        -- Urgen Pointer fields:
            -- Used in conjunction with one of the TCP control flags to point out particular segments that might be more important than others.
        -- Options field:
            -- It is sometimes used for more complicated flow control protocols.
        -- Padding: sequence of zeros and ones used to make sure the payload starts at the expected location.

    -- TCP Control Flags and Connections Protocols:
        -- As a protocol, TCP establishes connections used to send long chains of segments of data. You can contrast this with the protocols that are lower in the networking model. 
           These include IP and Ethernet, which just send individual packets of data. As an IT support specialist, you need to understand exactly how that works, so you can troubleshoot issues, 
            where network traffic may not be behaving in the expected manner. The way TCP establishes a connection, is through the use of different TCP control flags, used in a very specific order. 
            Before we cover how connections are established and closed, let's first define the six TCP control flags. We'll look at them in the order that they appear in a TCP header. Heads up. 
            This isn't necessarily in the same order of how frequently they're set, or how important they are. 
                -- The first flag is known as URG, this is short for Urgent. 
                    A value of one here indicates that the segment is considered urgent and that the urgent pointer field has more data about this. Like we mentioned in the last video, 
                    this feature of TCP has never really had wide spreaded option and isn't normally seen. 
                -- The second flag is ACK, short for acknowledge. A value of one in this field means that the acknowledgment number field should be examined. 
                -- The third flag is PSH, which is short for Push. This means, that the transmitting device wants the receiving device to push currently- 
            buffered data to the application on the receiving end as soon as possible. A buffer is a computing technique, where a certain amount of data is held somewhere, before being sent somewhere else. 
            This has lots of practical applications. In terms of TCP, it's used to send large chunks of data more efficiently. By keeping some amount of data in a buffer, TCP can deliver more meaningful 
            chunks of data to the program waiting for it. But in some cases, you might be sending a very small amount of information, that you need the listening program to respond to immediately. This is what the push flag does. 
                -- The Fourth flag is RST, short for Reset. This means, that one of the sides in a TCP connection hasn't been able to properly recover from a series of missing or malformed segments. It's a way for one                       of the partners in a TCP connection to basically say, "Wait, I can't put together what you mean, let's start over from scratch." 
                -- The fifth flag is SYN, which stands for Synchronize. It's used when first establishing a TCP connection and make sure the receiving end knows to examine the sequence number field. 
                    And finally, our six flag is FIN, which is short for Finish. When this flag is set to one, it means the transmitting computer doesn't have any more data to send and the connection can be closed. 
                    For a good example of how TCP control flags are used, let's check out how a TCP connection is established. 
                    Computer A will be our transmitting computer and computer B will be our receiving computer. To start the process off, 
            computer A, sends a TCP segment to computer B with this SYN flag set. This is computer A's way of saying, "Let's establish a connection and look at my sequence number field, so we know where this 
            conversation starts." Computer B then responds with a TCP segment, where both the SYN and ACK flags are set. This is computer B's way of saying, "Sure, let's establish a connection and I acknowledge 
            your sequence number." Then computer A responds again with just the ACK flag set, which is just saying, "I acknowledge your acknowledgement. Let's start sending data." 
            I love how polite they are to each other. 
                This exchange involving segments that have SYN, SYN/ACK and ACK sets, happens every single time a TCP connection is established anywhere. 
            And is so famous that it has a nickname. The three way handshake. A handshake is a way for two devices to ensure that they're speaking the same protocol and will be able to understand each other. 
            Once the three way handshake is complete, the TCP connection is established. Now, computer A is free to send whatever data it wants to computer B and vice versa. 
            Since both sides have now sent SYN/ACK pairs to each other, a TCP connection in this state is operating in full duplex. Each segment sent in either direction should be responded to by TCP segment with 
            the ACK field set. This way, the other side always knows what has been received. 
                Once one of the devices involved with the TCP connection is ready to close the connection, something known as a four way handshake happens. 
            The computer ready to close the connection, sends a FIN flag, which the other computer acknowledges with an ACK flag. 
            Then, if this computer is also ready to close the connection, which will almost always be the case. It will send a FIN flag. This is again responded to by an ACK flag. 
            Hypothetically, a TCP connection can stay open in simplex mode with only one side closing the connection. But this isn't something you'll run into very often. 
            Up next, I'll sock it to you, with information on TCP socket states. So many networking puns. Okay. See you there.

        -- Three way hand shake:

              Computer A     SYN  ============o===============>>        Computer B
                              <<++++++++++++++++++++o+o++++ SYN/ACK
                            ACK   ============o===============>>

        -- Four way hand shake:
 
             Computer A   <<+++++++++++++++++++++++o++++ FIN     Computer B
                           ACK ===============o===========>>
                           FIN ===============o===========>>
                          <<+++++++++++++++++o++++++++++++++ ACK


        -- TCP Socket states:
            -- The instantiation of an end-point in a potential TCP connection.
            -- The instantiation is the implementation of something defined else where.
            -- TCP sockets require actual programes to instantiate them.

    -- TCP Socket states:

                    

                    Server         LISTEN [ TCP socket is ready and listening for incoming connections ]

                                   SYN_SENT [ A synchronization request has been sent, but the connection hasn't been established yet. ]   Client

                    Server         SYN-RECIVED [ A socket previously in a LISTEN state has received a synchronization request and sent a SYN/ACK back.]

                    Server         ESTABLISHED [ The TCP connection is in working order and both sides are free to send each other data.]   Client

        -- Other states:
            -- FIN_WAIT: A FIN has been sent, but the corresponding ACK from the other end hasn't been received yet.
            -- CLOSE_WAIT: The connection has been closed at the TCP layer, but that the application that opened the socket hasn't released its hold on the socket yet.
            -- CLOSED: The connection has been fully terminated and that no further communication is possible.

    -- Connection-oriented and Connectionless Protocols:
            -- Connection-oriented protocol:
                -- Establishes a connection, and uses this to ensure that all data has been properly transmitted.
    -- Connectionless protocols:
        -- UDP: User Datagram Protocol
        -- doesn't rely on connections
    -- Ports:
        Transportation layer protocols use a concept of ports and multiplexing/demultiplexing to deliver data to individual services listening on network nodes. These ports are represented by a single 16-bit number, meaning that they can represent the numbers 0-65535.
This range has been split up by the IANA into independent sections:
Port 0 isn't in use for network traffic, but it's sometimes used in communications taking place between different programs on the same computer.
Ports 1-1023 are referred to as system ports, or sometimes as well-known ports. These ports represent the official ports for most well-known network services. In an earlier video, we talked about how HTTP normally communicates over port 80, while FTP usually communicates over port 21. In most operating systems, administrator-level access is needed to start a program that listens on a system port. Help link: https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers


Ports 1024-49151 are known as registered ports. These ports are used for lots of other network services that might not be quite as common as the ones that are on system ports. A good example of a registered port is 3306, which is the port that many databases listen on. Registered ports are sometimes officially registered and acknowledged by the IANA, but not always. On most operating systems, any user of any access level can start a program listening on a registered port.
Finally, we have ports 49152-65535. These are known as private or ephemeral ports. Ephemeral ports can't be registered with the IANA and are generally used for establishing outbound connections. You should remember that all TCP traffic uses a destination port and a source port. When a client wants to communicate with a server, the client will be assigned an ephemeral port to be used for just that one connection, while the server listens on a static system or registered port.
Not all operating systems follow the ephemeral port recommendations of the IANA. In this lesson, we\u2019ll continue to assume that the ephemeral ports used for outbound connections consist of the ports 49152 through 65535. But it\u2019s important to know that this exact range can vary depending on the platform you\u2019re working on. Sometimes portions of the registered ports range are used, but no modern operating system will ever use a system port for outbound communication.

    -- Firewalls:
        -- Device that blocks traffic that meets certain criteria.
    

The Transport Layer:
    -- The Application Layer and the OSI Model:
        -- OSI:> Open Systems Interconnection Model,
            -- schema
                                                        Application
    Responsible for making sure that the   ========>>   Presentation
    unencapsulated application layer data               Session    <<=================== Facilitates the communication between actual applications and the transport layer.
    is able to be understood by the                     Transport                        Takes application layer data and hands it off to the presentation layer
    application in question. Encrytion and              Network
    compression of data might be done here.             Data Link
                                                        Physical
                        
