Users and Groups:
    -- Users, Administrator, and Groups:
        --- Welcome back. Now that we've learned how to
         navigate around the Windows and Linux operating systems,
         let's start setting up our computer for use by other people.
         As an IT support specialist,
         you'll be responsible for other people's machines.
         People will depend on you to help set up their machines,
         troubleshooting their issues, and so on.
         In this lesson, you'll learn how to manage multiple accounts on one machine.
         You'll also learn about the different permissions and access types,
         how to add and remove users,
         and the best practices to use when managing multiple users.
         It's common for a computer to have multiple users.
         On your home computer, you might have your parents,
         siblings, or children using the same computer.
         Your town, library, school,
         or other public places might also have computers with multiple users.
         Even though these machines have multiple user accounts on them,
         all users on a computer are isolated from others.
         This means that Kevin can't see Victor's files and folders, and vice versa.
         There are two different types of users,
         standard users and administrators.
         A standard user is one who is given access to a machine,
         but has restricted access to do things like install software or change certain settings.
         An administrator or admin is a user that has complete control over a machine.
         They can view anyone's account,
         change and remove anyone on the computer,
         and view every single file.
         You can have multiple administrators on a machine as well.
         On your personal machine,
         you're the default administrator because this
         gives you complete control over your system.
         After all, it is your machine.
         But on a public computer,
         the administrator is someone who actually runs and maintains the machine,
         like an IT support specialist,
         they can grant access for other users,
         install software, change restricted system settings,
         and perform other actions they deem appropriate.
         How terrible would it be if anyone who is
         using a public computer could just install software?
         The computers would be bloated,
         things would be out of place,
         and worst of all, they could be infected with malicious software.
         Users are put together in groups according to levels of
         access and permissions to carry out certain tasks.
         These tasks depend on what the computer's administrator considers appropriate.
         An administrator could give different access and
         settings based on the type of group a user is in.
         Let's say you're an administrator for your home computer,
         which everyone in the house uses.
         You put your parents in a group called Parents,
         and your kids in a group called Children.
         You don't want either of them to be able to install software,
         but you also want to add child safety restrictions on the children group.
         As the administrator, you're able to specify
         different permissions for both of these groups.
         So how do you differentiate what type of user you are,
         and what groups you're in on Windows and Linux?
         Well hopefully, you'd know this if you are an administrator of a computer.
         But if you don't, computers do a pretty good job of telling you.
         In the next few lessons,
         we'll see how we can view user and group information in Windows and Linux

    - Windows: View User and Group Information:
        -- To view user and group information in windows,
         we're going to use the computer management tool if
         we search computer management in our application search and open it up,
         we'll see a window that gives us a lot of information.
         
        We'll be using this application a lot throughout this course,
         so let's take some time to go over it.
         At the top of the sidebar,
         you'll see it says computer management local.
         This means we're managing a single machine locally.
         In an enterprise environment,
         you can manage multiple machines in something called a domain.
         A Windows domain is a network of computers,
         users, files, et cetera,
         that are added to a central database.
         If you're an admin of that domain,
         you can view those accounts and computers from any machine in the domain.
         We'll learn more about domains and how to manage them in our next course on
         system administration and IT infrastructure services.
         Underneath this menu, we have system tools.
         Let's do a run down of each of these sub menus.
         Task Scheduler: This lets you schedule programs and tasks to run at certain times,
         like automatically shutting off the computer at 11:00 pm every night.
         
        Event Viewer: This is where our system stores its system logs.
         We'll do a deep dive on this tool in an upcoming lesson.
         
        Shared folders: This shows the folders
         that different users on the machine share with each other.
         Remember how he said that other users can't view anyone else's files?
         That's not exactly true.
         If users store files on a shared folder,
         anyone who has access to that folder can view it.
         Local Users and Groups: This is where we'll be doing our user and group management.
         Performance: This shows monitoring for the resources of our machine like CPU and RAM.
         
        Device Manager: This is where we go to manage
         devices to our computer like our network cards,
         sound cards, monitors, and more.
         
        Under the storage menu,
         we have a sub menu for disk management.
         We use this when we talk about discs in a later lesson.
         
        Finally, the services and applications menu
         shows us the programs and services that we have available on the system.
         We can choose to enable or disable services like DNS here.
         All the essential settings that we as
         administrators need to change are found in the computer management tool.
         If you're a power user it's more efficient to use
         this than it is to go through the default settings application.
         Okay, let's get back to the task at hand.
         Let's see what kind of user account we have and what groups we're a part of.
         Let's go back to the local users and groups.
         Under users, we can see a few built in Windows accounts like guest and administrator.
         
        The local administrator account lets you log in using
         the administrator username and whatever the administrator password is on the computer.
         This account is disabled by default.
         Since this account has unfettered access on the computer,
         it can be dangerous to be logged into it at all times.
         For now, let's look at the account I'm in.
         Cindy, let's double click on this to see more information.
         Okay, let's do a rundown here.
         Under the tab general,
         we can see some basic information about the user along with some options.
         User must change password at next logon.
         Since I'm an admin, I can force other users to change their password.
         This is useful if I'm managing someone's account and their password was compromised.
         We don't want to risk someone else logging into their account,
         so we force them to change their password.
         User cannot change password.
         Password never expires.
         Account is disabled.
         Enabling or disabling an account means making it active or inactive.
         Account is locked out.
         This means a user account will not be able to log in.
         Maybe a disgruntled employee is looking to do malicious things.
         We can make it so that they won't be able to log into their computer.
         Under the member of tab,
         we can see which groups we're part of.
         I can see that I'm in the administrators group.
         Heads up that instead of being logged into a local administrator account all the time,
         you can be logged into your own account and use administrative powers when you need to.
         This is thanks to the help of UAC or user access control.
         This is a feature in Windows that prevents unauthorized changes to a system.
         These changes have to be approved by the administrator instead.
         Since I'm an administrator,
         I would do is enter in my password to confirm that I want to make a change.
         Finally, on the last tab,
         profile, you can change settings about your user profile,
         like where you want your home folder to be.
         This isn't terribly important on a local account,
         but it comes in handy when you're managing many users on a domain.
         Now if we go to the groups menu on the sidebar,
         it should look familiar.
         
        Just like the member tab,
         we can view which groups are available and who their members are.
         And that's how you view user and group information using the Windows GUI.
         Next, let's take a look at how to do the exact same thing using Windows-

    - Windows: View User and Group Information using CLI:
        -- We talked about using the CLI in-depth in the last module.
         We've seen how it can make our tests quicker when we modify files and folders.
         Now, we're going to start using commands to help us with other tasks on our system.
         Imagine you're working as an I.T.
         support specialist at a company and your boss asks
         you to check all the user information on 10 machines,
         to make sure that the local administrator account is not enabled.
         Sure you could search computer management in the search bar,
         click computer management local,
         look under system tools,
         click on local users and groups,
         then double click on the username of the computer to
         ensure that their local administrator account is enabled.
         Now, you just have to do that nine more times.
         There's a much faster way.
         You can just use the CLI to quickly see the list of users on
         the computer using the command Get-LocalUser.
         
        As you can see, it lists my user account,
         a few other users and a couple of other default accounts that are part of Windows.
         Here you can see that my local administrator account isn't enabled.
         That's way easier.
         What about groups?
         I bet you can guess,
         Get-LocalGroup will list the groups on the local machine.
         There are a whole bunch of groups but don't worry,
         these are all built-in groups.
         Each of them are important,
         but we aren't likely to make changes to most of them.
         One that we will make changes to is the administrators group.
         Remember, this group controls who has administrative access to the machine.
         It's important to know who's in this group since anyone in
         this group can make any change they want to the machine.
         We just saw in the GUI that we're in this group,
         but I wonder who else is?
         Let's see who's in this group with Get-LocalGroupMember,
         and I want to check the administrators group.
         We can see that the administrator user and my user are in
         the administrators group but no one else. Looks good to me.
         One last note, these local user and group PowerShell
         commands require that your running PowerShell 5.1 or newer.
         You may have noticed that I keep saying local accounts and local users.
         If your organization has a lot of Windows machines,
         it's very common to use active directory to manage
         user accounts in a central directory service.
         We'll learn more about active Directory accounts in
         our next course on system administration and I.T.
         infrastructure services.
         But let's focus on local accounts for now.

    - Windows: Passwords:
        -- link: https://msdn.microsoft.com/en-us/library/cc875839.aspx
         
                 
    - Windows: Add and Remove User:
        -- Okay. Now that you know how to view information
         about users and the hierarchy of user permissions,
         let's learn how to add and remove users on a machine.
         To add a user, we're going to go back to our computer management tool.
         
        Under local users and groups,
         we're going to right click and select New User.
         
        From here, it asks us to set a username,
         a full name, and a password.
         Remember, that in order to use good password setting practices,
         we set a default password and then make the user change that password when they log in.
         So, we're going to go ahead and set a default password,
         and make sure the box for,
         "user must change password at next log on" is checked, and then click Create.
         So I'm just going to make a new user account for Elizabeth and have the password,
         and then just make sure that's checked, and hit Create.
         And that's how you create a new local user.
         To remove a user,
         we simply right click and select Delete.
         This gives us a warning message that says,
         user names are unique,
         and even if you delete the user and give them the exact same username,
         they won't be able to access their old resources.
         Once you confirm that you want to do that,
         just go ahead and click delete it.
         And that's how you remove a local user account.
         Adding and removing local user accounts from the CLI,
         is going to use the same net command that we use to change passwords,
         just with different parameters.
         Like before, there's a native power shell command,
         new dash local user,
         that requires a little bit of scripting to use.
         If you want to use new dash local user,
         check out the supplemental reading.
         Now, back to net.
         To add a new local user,
         we simply use the slash add parameter.
         If we add the slash add parameter to the same command we used before,
         it instructs net to create the account.
         We can still use the asterisk for the password to be prompted to enter a password.
         Let's test this out and create a new account for Andrea.
         So, net user andrea * / add.
         Now, let's list the user accounts to be sure it worked.
         So, Get-LocalUser.
         Sweet. There it is.
         Now, there's a small problem which you saw in the earlier lesson on passwords.
         This account is for Andrea,
         but we know what the password is.
         We don't want to know what the password is because that means we can log in as Andrea.
         We want to make sure that Andrea changes her password to something that we don't know.
         So, we're going to flag her account as requiring a password change
         using the slash log on password change yes parameter.
         So, net user andrea / logonpasswordchg:yes.
         Now you all know what a password is.
         You can actually combine these two commands that we ran to
         create a new account that requires a password change at first login.
         Let's create an account for Cesar.
         So, net user cesar password
         / add / logonpasswordchg:yes.
         Now, when we run the Get-LocalUser,
         we should see both of our new accounts.
         Sweet. And there it is.
         Cesar's new account has a password that you know and you can give it to him,
         but he'll have to change the password the first time he logs in. All right.
         Now let's remove these accounts that we just created.
         I'm going to show you how to do this using net, and using Remove-LocalUser.
         Both of these commands will do the exact same thing.
         So let's delete Andrea's account,
         net user andrea /del.
         This will delete Andrea's account.
         And using the Remove-LocalUser cesar,
         we can remove Cesar's account.
         Sweet, now it's gone. See how each of these options follows a pattern.
         The net user example,
         looks just like it did to create a new user account,
         except instead of adding an account,
         we deleted the account.
         In the second example, instead of getting,
         setting, or creating a new dash local user,
         we removed the account.
         As you continue to learn new CLI commands,
         you'll start to notice these sorts of patterns.
         Being able to identify these patterns will help you discover new things that you can do,
         and remember how to do things you haven't done in a while.
